name: CD

on:
  push:
    branches: ['master']

# DATABASE_URL: ${{secrets.DATABASE_URL}}

env:
  DEBUG: ${{vars.DEBUG}}
  PORT: ${{vars.PORT}}
  PRISMA_ENGINE_PROTOCOL: ${{vars.PRISMA_ENGINE_PROTOCOL}}
  MAX_FEEDBACK_PER_DAY_COUNT: ${{vars.MAX_FEEDBACK_PER_DAY_COUNT}}
  FRONTEND_URL: ${{vars.FRONTEND_URL}}
  BACKEND_URL: ${{vars.BACKEND_URL}}
  ENABLE_SESSION_ACCESS_JWT_ENCRYPTION: ${{vars.ENABLE_SESSION_ACCESS_JWT_ENCRYPTION}}
  DATABASE_LOG_QUERY: ${{vars.DATABASE_LOG_QUERY}}
  MAIL_URL: ${{vars.MAIL_URL}}
  MAIL_DOMAIN: ${{vars.MAIL_DOMAIN}}
  MAIL_API_KEY: ${{vars.MAIL_API_KEY}}
  MAIL_USERNAME: ${{vars.MAIL_USERNAME}}
  MAIL_FROM: ${{vars.MAIL_FROM}}
  COOKIE_SECRET: ${{vars.COOKIE_SECRET}}
  ACCESS_TOKEN_EXPIRATION_IN_SEC: ${{vars.ACCESS_TOKEN_EXPIRATION_IN_SEC}}
  REFRESH_TOKEN_EXPIRATION_IN_SEC: ${{vars.REFRESH_TOKEN_EXPIRATION_IN_SEC}}
  RECOVER_PASSWORD_REQUEST_TIMEOUT_IN_SEC: ${{vars.RECOVER_PASSWORD_REQUEST_TIMEOUT_IN_SEC}}
  RESET_PASSWORD_REQUEST_TIMEOUT_IN_SEC: ${{vars.RESET_PASSWORD_REQUEST_TIMEOUT_IN_SEC}}
  ACCOUNT_VERIFICATION_TOKEN_EXPIRATION_IN_SEC: ${{vars.ACCOUNT_VERIFICATION_TOKEN_EXPIRATION_IN_SEC}}
  ACCESS_TOKEN_SECRET: ${{vars.ACCESS_TOKEN_SECRET}}
  REFRESH_TOKEN_SECRET: ${{vars.REFRESH_TOKEN_SECRET}}
  SESSION_JWT_ENCRYPTION_KEY: ${{vars.SESSION_JWT_ENCRYPTION_KEY}}
  ACCOUNT_VERIFY_TOKEN_SECRET: ${{vars.ACCOUNT_VERIFY_TOKEN_SECRET}}
  RECOVER_PASSWORD_TOKEN_SECRET: ${{vars.RECOVER_PASSWORD_TOKEN_SECRET}}
  RESET_PASSWORD_TOKEN_SECRET: ${{vars.RESET_PASSWORD_TOKEN_SECRET}}
  POSTGRES_PASSWORD: ${{vars.POSTGRES_PASSWORD}}
  POSTGRES_USERNAME: ${{vars.POSTGRES_USERNAME}}
  POSTGRES_DB: ${{vars.POSTGRES_DB}}

jobs:
  build:
    runs-on: self-hosted
    environment: Prod
    steps:
      - uses: actions/checkout@v3
      - name: shut down the image
        run: docker compose down
      - name: remove dangling images
        run: docker image prune --all --force
      - name: rebuild the image
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }} #! This is important to be in repository secrets instead of environment secrets, prisma stuff
        run: docker compose build --no-cache
      - name: run the image
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }} #! This is important to be in repository secrets instead of environment secrets, prisma stuff
        run: docker compose up -d
#
# https://stackoverflow.com/questions/60176044/how-do-i-use-an-env-file-with-github-actions
